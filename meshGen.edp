/* Triangulate rectangle */

int nx = 5;
int ny = 10;

real x0= -2.0;
real x1= 3.0;
real y0= -1.0;
real y1= 4.0;

mesh Th1=square(nx,ny,
    [x0+(x1-x0)*x, y0+(y1-y0)*y]

);

plot(Th1);

/* Compound mesh*/

real xMin = -4.0;
real xMax = 4.0;

real xMidLeft = -2.0;
real xMidRight = 2.0;

real yMin=0.0;
real yMax=3.0;

int labelR=1;
int labelL=2;
int labelT=3;
int labelB=4;

int n=50;

border GammaR(t=0,1){

    x=xMax;

    y=yMin+(yMax-yMin)*t;

    label=labelR;
}

border GammaL(t=0,1){

    x=xMin;

    y=yMax+(yMin-yMax)*t;

    label=labelL;
}

border GammaT(t=0,1){

    x=xMax+(xMin-xMax)*t;

    y=yMax;

    label=labelT;
}


real beta=3.0;

border GammaBL(t=1,0){

    /*x=xMin+(xMidLeft-xMin)*t;*/

    /*x=xMin+(xMidLeft-xMin)**/
    x=xMidLeft+(xMin-xMidLeft)*
    (exp(beta*(t))-1)/(exp(beta)-1);

    y=yMin;

    label=labelB;
}

border GammaBM(t=0,1){

    x=xMidLeft+(xMidRight-xMidLeft)*t;

    y=yMin;

    label=labelB;
}





border GammaBR(t=0,1){

    x=xMidRight+(xMax-xMidRight)*
    (exp(beta*t)-1)/(exp(beta)-1);

    y=yMin;

    label=labelB;
}

plot(GammaR(n)+GammaL(n)+GammaT(n)+GammaBL(n)+GammaBM(n)+GammaBR(n), dim=2, wait=1);

mesh Th2=buildmesh(GammaR(n)+GammaL(n)+GammaT(n)+GammaBL(n)+GammaBM(n)+GammaBR(n), nbvx=2000, fixedborder=true);

plot (Th2, wait =1, cmm="non uniform mesh");

/* For loop compound mesh */

real[int] xRect=[0,1,1,0];
real[int] yRect=[0,0,1,1];

int[int] nRect=[4,4,5,7]*4;
int labelRect=0;

real[int] rCircle=[0.1,0.05,0.05,0.1];
real[int] xCircle=[0.2,0.8,0.2,0.8];
real[int] yCircle=[0.2,0.8,0.8,0.2];
int[int] nCircle=[-10,-11,-12,13]*5;
int[int] labelCircle=[1,2,3,4];

/*Circles boundary*/
border GammaCircles(t=0, 2*pi;i){

    x=rCircle[i]*cos(t)+xCircle[i];
    y=rCircle[i]*sin(t)+yCircle[i];
    label =labelCircle[i];


}

/* Rectangle border */
border GammaRect (t=0,1; i){

    int iNext=(i+1)%nRect.n;
    real t1=1-t;
    x=xRect[i]*t1+xRect[iNext]*t;
    y=yRect[i]*t1+yRect[iNext]*t;
    label=labelRect;
}

mesh Th3 = buildmesh(GammaRect(nRect)+ GammaCircles(nCircle));

plot(Th3);